services:
  # PostgreSQL Database
  postgres:
    image: pgvector/pgvector:pg16
    container_name: promtitude-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-promtitude}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-promtitude123}
      POSTGRES_DB: ${POSTGRES_DB:-promtitude}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"  # Changed to 5433 to avoid conflict
    networks:
      - promtitude-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-promtitude}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: promtitude-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6380:6379"  # Changed to 6380 to avoid conflict
    networks:
      - promtitude-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant
    container_name: promtitude-qdrant
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - promtitude-network
    environment:
      QDRANT__LOG_LEVEL: INFO

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.simple
    container_name: promtitude-backend
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-promtitude}:${POSTGRES_PASSWORD:-promtitude123}@postgres:5432/${POSTGRES_DB:-promtitude}
      - REDIS_URL=redis://redis:6379/0
      - QDRANT_URL=http://qdrant:6333
    env_file:
      - .env
    volumes:
      - ./backend:/app
    ports:
      - "8001:8000"  # Changed to 8001 to avoid conflict
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      qdrant:
        condition: service_started
    networks:
      - promtitude-network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: promtitude-frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8001
      - NODE_ENV=development
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "3001:3000"  # Changed to 3001 to avoid conflict
    depends_on:
      - backend
    networks:
      - promtitude-network

  # pgAdmin (optional, for database management)
  pgadmin:
    image: dpage/pgadmin4
    container_name: promtitude-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@promtitude.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - promtitude-network
    profiles:
      - tools

volumes:
  postgres_data:
  redis_data:
  qdrant_data:

networks:
  promtitude-network:
    driver: bridge